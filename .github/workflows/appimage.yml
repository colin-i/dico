
on:
 workflow_dispatch:
  inputs:
   ppa:
    description: "ppa sufix"
   testf:
    description: "test file"
   testfd:
    description: "test file destination"

jobs:
 build:
  runs-on: ubuntu-22.04
  steps:
   - uses: actions/checkout@master
   - name: Run a multi-line script
     run: |
      name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
      name2=DiCoPP
      #
      mkdir -p AppDir
      file=runtime
      arch_ai=-x86_64
      archfile=${file}${arch_ai}
      kitpart () {
       #https://github.com/AppImage/pkg2appimage
       #in searching for fuse3, was latest
       #urlpart=`wget -q https://github.com/AppImage/AppImageKit/releases/continuous -O - | grep "${archfile}" | head -n 1 | cut -d '"' -f 2`
       #this is at o urlpart=AppImage/AppImageKit/releases/latest/download/${archfile}
       #this is from a browser, not tested at this comment
       urlpart=AppImage/AppImageKit/releases/download/continuous/${archfile}
      }
      if [ ! -e "${file}" ]; then
       kitpart
       #"pkg2appimage-.*-x86_64.AppImage"
       wget -c https://github.com/${urlpart}
       mv ${archfile} ${file}
       chmod a+x ${file}
      fi
      if [ ! -e "${name}.deb" ]; then
       version=`cat debian/changelog | head -1 | grep -Poe "[^\(]*(?=\))"`
       if [ ! -e "lp2.py" ]; then
        wget -q https://raw.githubusercontent.com/colin-i/test/master/lp2.py
        #is already sudo apt install python3-launchpadlib
       fi
       OUTPUT=$(python3 lp2.py ppa${{ github.event.inputs.ppa }} ${name} ${version} amd64)
       wget ${OUTPUT}/+files/${name}_${version}_all.deb -O ${name}.deb
       dpkg -x ${name}.deb AppDir
      fi
      #dependencies
      downdeb () {
       pkg=${1}
       repo=${2}
       src="ro.archive.ubuntu.com"
       inter=Packages
       fullinter=${inter}${repo}
       if [ ! -e "${fullinter}" ]; then
        wget http://${src}/ubuntu/dists/jammy${3}/${repo}/binary-amd64/${inter}.xz -O ${fullinter}.xz
        xz -d ${fullinter}.xz
       fi
       debfilename=`grep "^Filename.*/${pkg}_" ${fullinter}`
       debfilename=`echo ${debfilename} | tail -1 | cut -d ' ' -f 2`
       wget_url=http://${src}/ubuntu/${debfilename}
       maindeb=${pkg}.deb
       wget ${wget_url} -O ${maindeb}
       dpkg -x ${maindeb} AppDir
      }

      #only for noble
      downdeb libpython3.10-minimal main
      downdeb libpython3.10-stdlib main
      downdeb python3.10-minimal main
      #import psutil(jammy version) at noble is error
      downdeb python3-gi main
      downdeb python3-requests main
      downdeb python3-six main
      downdeb python3-chardet main
      downdeb python3-certifi main
      downdeb python3-urllib3 main -updates
      downdeb python3-idna main -updates
      #
      downdeb gir1.2-freedesktop main   #cairo typelib
      downdeb gir1.2-gdkpixbuf-2.0 main #gdk typelib
      downdeb libpcrecpp0v5 main        #lib eis at -d
      downdeb libpcre3 main             #libpcre at -d

      downdeb gir1.2-graphene-1.0 main
      downdeb libminiupnpc17 main
      downdeb python3-appdirs main
      downdeb python3-psutil main
      #python3-requests is already

      downdeb eiskaltdcpp-daemon universe
      downdeb libeiskaltdcpp2.4 universe
      downdeb liblua5.2-0 universe

      downdeb gir1.2-gtk-4.0 main -updates
      downdeb gir1.2-harfbuzz-0.0 main -updates
      downdeb gir1.2-pango-1.0 main -updates
      downdeb libidn12 main -updates
      downdeb libpangoxft-1.0-0 main -updates

      apd=AppDir
      if [ -n "${{ github.event.inputs.testf }}" ]; then
       echo ${{ github.event.inputs.testf }} ${{ github.event.inputs.testfd }}
       mv ${{ github.event.inputs.testf }} ${apd}/${{ github.event.inputs.testfd }}
      fi

      cd ${apd}
      file2=AppRun
      if [ ! -e "${file2}" ]; then
       if [ -z "${urlpart}" ]; then
        kitpart
       fi
       archfile2=${file2}${arch_ai}
       urlpart=${urlpart:0:`echo ${urlpart} | grep -ob '[^/]*$' | cut -d ':' -f 1`}${archfile2}
       wget -c https://github.com/${urlpart}
       chmod a+x ${archfile2}
       mv ${archfile2} ${file2}
      fi
      pngfile=${name}.png
      if [ ! -e "${pngfile}" ]; then
       wget https://github.com/colin-i/test/releases/download/1.5/${name}.png -O ${pngfile}
       cat > ${name}.desktop <<EOF
      [Desktop Entry]
      Type=Application
      Name=${name2}
      Exec=${name}
      Icon=${name}
      Categories=Utility
      EOF
       ln -s ${pngfile} .DirIcon
      fi
      #launcher
      sname=dico
      if [ ! -e "usr/bin/${sname}" ]; then
       echo launcher
       cd usr/bin
       mv ${name} ${sname}
       #PYTHONHOME(for main modules) is set by AppRun wrong. easy to test with echo ${PYTHONHOME}
       #unset PYTHONHOME #only if not adding python
       #after first 2 LD is for noble
       cat > ${name} <<EOF
      #!/bin/sh
      cd "\$(dirname "\$0")"
      cd ../
      LD_LIBRARY_PATH="\$(pwd)/lib:\$(pwd)/lib/x86_64-linux-gnu:\$(pwd)/../lib/x86_64-linux-gnu"\
       PYTHONHOME="\$(pwd)"\
       PYTHONPATH="\$(pwd)/lib/python3/dist-packages"\
       GI_TYPELIB_PATH="\$(pwd)/lib/x86_64-linux-gnu/girepository-1.0"\
       ./bin/python3.10 bin/${sname} "\$@"
      EOF
       chmod 755 ${name}
       cd ../../
      fi
      #metadata file
      mi=usr/share/metainfo
      mif=${mi}/com.colin.${name}.appdata.xml
      if [ ! -e "${mif}" ]; then
       page=`cat ../debian/control | grep "^Homepage" | cut -d ' ' -f2`
       srcname=`echo ${page} | grep -o "[^/]*$"`
       mkdir -p ${mi}
       cat > ${mif} <<EOF
      <?xml version="1.0" encoding="UTF-8"?>
      <!-- Copyright 2022 -->
      <component type="desktop-application">
       <id>com.colin.${name}</id>
       <metadata_license>FSFAP</metadata_license>
       <name>${name2}</name>
       <summary>Direct Connect ++ client</summary>
       <description>
        <ul>
         <li>Download/Upload dc data</li>
         <li>Search in filelists or by keywords</li>
         <li>Detailed statistics</li>
        </ul>
       </description>
       <url type="homepage">${page}</url>
       <screenshots>
        <screenshot type="default">
         <caption>${name2} image</caption>
         <image>https://raw.github.com/colin-i/${srcname}/master/arh/${name}.png</image>
        </screenshot>
       </screenshots>
       <content_rating/>
      </component>
      EOF
      fi
      #
      cd ..
      #
      if [ ! -e "${name}.AppImage" ]; then
       mksquashfs AppDir ${name}.squashfs -root-owned -noappend
       cat runtime >> ${name}.AppImage
       cat ${name}.squashfs >> ${name}.AppImage
       chmod a+x ${name}.AppImage
      fi
      #glibc=`readelf -V ${apd}/usr/bin/${name} | grep -Po "(?<= GLIBC_)[^ ]*" | sort -Vr | head -1 | sed "s/\./-/g"`
      #echo -n ${glibc} > version #"glibc" will not be ok for upload-artifact
   - name: artifact
     uses: actions/upload-artifact@master
     with:
      name: appimage
      path: |
       ./*.AppImage
      # ./version
